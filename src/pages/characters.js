import React, { useState, useEffect } from "react";
import { useRouter } from "next/router";
import Head from "next/head";
import Link from "next/link";


function Characters({
  characters: initialCharacters,
  loading: initialLoading,
}) {
  const [characters, setCharacters] = useState<CharacterType[] | null>(
    initialCharacters
  );
  const [loading, setLoading] = useState<boolean>(initialLoading);
  const [paginationInfo, setPaginationInfo] = useState<InfoType | null>(null);
  const [currentPage, setCurrentPage] = useState<number>(1);
  //!initializing the router:
  const router = useRouter();


  useEffect(() => {
    //!creating the abort-controller which tells to cancel the actual fetch in the moment a new request/fetch is done by the user, for example with pagination
    let controller = new AbortController();
    const signal = controller.signal;

    const fetchData = async () => {
      try {
        setLoading(true);
        const response = await fetch(
          `https://rickandmortyapi.com/api/character?page=${currentPage},  { signal }`
        );

        if (response.ok) {
          const result = await response.json();
          setCharacters(result.results);
          setPaginationInfo(result.info);
          setLoading(false);
        }
      } catch (error) {
        console.error("Error fetching data:", error);
        setLoading(false);
      }
    };

    fetchData();
  }, [currentPage]);

  const nextPage = () => {
    if (paginationInfo?.next) {
      setCurrentPage((prevPage) => prevPage + 1);
    }
  };

  const prevPage = () => {
    if (paginationInfo?.prev) {
      setCurrentPage((prevPage) => prevPage - 1);
    }
  };

  return (
    <>
      <Head>
        <title key="title">SSG</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bg-black text-white">
        <h1 className={styles.myCharactersH1}>List of Characters</h1>
        {loading ? (
          <p>Loading...</p>
        ) : (
          <>
            <div className={styles.imageGrid}>
              {characters?.map((character) => (
                <div className={styles.characterCard} key={character.id}>
                  <Link href={`/character/${character.id}`}>
                    <img
                      src={character.image}
                      alt={character.name}
                      className={styles.characterImage}
                    />
                  </Link>
                </div>
              ))}
            </div>

            <div className={styles.paginationContainer}>
              <div className={styles.paginationContainer}>
                <button
                  onClick={prevPage}
                  disabled={!paginationInfo?.prev}
                  className={styles.paginationButton}
                >
                  Prev
                </button>
                <button
                  onClick={nextPage}
                  disabled={!paginationInfo?.next}
                  className={styles.paginationButton}
                >
                  Next
                </button>
              </div>
            </div>
          </>
        )}
      </div>
    </>
  );
}

export default Characters;
